name: Packaging

on:
  release:
    types: [published]

  workflow_dispatch:

env:
  PROJECT: buvar
  # renovate: datasource=github-tags depName=uv lookupName=astral-sh/uv
  UV_VERSION: 0.7.13

jobs:
  package_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: ${{ env.UV_VERSION }}

      - run: uv sync --dev --frozen
      - run: uv run pytest --cov buvar

      - name: Build source distribution
        run: uv build --sdist

      - name: archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buvar-sdist
          retention-days: 1
          path: |
            ./dist/${{ env.PROJECT }}-*.tar.gz

  package_wheels:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - manylinux_2_28_x86_64
        version:
          - cp313-cp313
          - cp312-cp312
          - cp311-cp311
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64:latest

    env:
      PATH: "/opt/python/${{ matrix.version }}/bin:${PATH}"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: ${{ env.UV_VERSION }}

      - name: Build wheels
        run: uv build --wheel

      # - name: build wheels
      #   run: |
      #     export PATH="/opt/python/${{ matrix.version }}/bin:${PATH}"
      #     pip install setuptools
      #     pip wheel -w ./wheelhouse cython pip
      #     pip install -U cython pip -f ./wheelhouse
      #     python setup.py bdist_wheel -d wheels
      #     auditwheel repair ./wheels/${PROJECT}*${{ matrix.version }}*.whl \
      #       --plat ${{ matrix.platform }} -w ./dist
      #     pip install ./dist/${PROJECT}*${{ matrix.version }}*.whl
      #     pip install "${PROJECT}[tests]" -f ./dist -f ./wheelhouse
      #     pytest tests
      #
      - name: archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buvar-${{ matrix.version }}-${{ matrix.platform }}
          retention-days: 1
          path: |
            ./dist/${{ env.PROJECT }}-*${{ matrix.version }}*.whl

  publish_sdist:
    needs:
      - package_sdist
      - package_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PROJECT }}  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: buvar-sdist
          path: dist

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish_wheels:
    needs:
      - package_sdist
      - package_wheels
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PROJECT }}  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    strategy:
      fail-fast: false
      matrix:
        platform:
          - manylinux_2_28_x86_64
        version:
          - cp313-cp313
          - cp312-cp312
          - cp311-cp311
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: buvar-${{ matrix.version }}-${{ matrix.platform }}
          path: dist

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
